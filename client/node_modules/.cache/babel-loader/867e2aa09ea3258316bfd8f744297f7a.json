{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/random/3'\n};\nlet path = ''; //import response from 'response';\n\nfunction TinderCards() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  const [obj, setObj] = useState([]);\n  useEffect(() => {\n    data();\n  }, []);\n\n  const data = async () => {\n    try {\n      const res = await axios.get('https://dog.ceo/api/breeds/image/random/50'); // setPeople(res.data.message);\n      //console.log(res.request);\n\n      let tmpArray = [];\n\n      for (var i = 0; i < res.data.message.length; i++) {\n        tmpArray.push(res.data.message[i]);\n      }\n\n      setPeople(tmpArray); //  console.log(tmpArray);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const swiped = people => {\n    try {\n      console.log(people[1].toString.match(\"/breeds/(.*)/\")[1]);\n    } catch (e) {\n      console.log(e);\n    } // setLastDirection(direction);\n\n  };\n\n  const outOfFrame = () => {\n    // console.log(\"\"+path[1].match(\"/breeds/(.*)/\")[1] + \"left the screen\");\n    try {\n      console.log(\"\" + path.toString().match(\"/breeds/(.*)/\") + \"left the screen\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tinderCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tinderCards__cardContainer\",\n      children: people.map((person, i) => /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        preventSwipe: [\"up\", \"down\"],\n        onSwipe: people => swiped(people[1]),\n        onCardLeftScreen: () => outOfFrame(person.responsex),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: 'url(' + people[i] + ')'\n          },\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TinderCards, \"6ZL2+EsipXAO9RbgohQLpWtehLA=\");\n\n_c = TinderCards;\nexport default TinderCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js"],"names":["React","useEffect","useState","TinderCard","axios","createClient","Card","options","method","url","path","TinderCards","people","setPeople","obj","setObj","data","res","get","tmpArray","i","message","length","push","err","console","log","swiped","toString","match","e","outOfFrame","map","person","responsex","backgroundImage","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAE;AAFS,CAAhB;AAKA,IAAIC,IAAI,GAAG,EAAX,C,CAIA;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,IAAI;AAGP,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMA,IAAI,GAAG,YAAY;AAErB,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,4CAAV,CAAlB,CADD,CAEA;AACC;;AAGA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACD,IAAJ,CAASK,OAAT,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9CD,QAAAA,QAAQ,CAACI,IAAT,CAAcN,GAAG,CAACD,IAAJ,CAASK,OAAT,CAAiBD,CAAjB,CAAd;AAEH;;AAIVP,MAAAA,SAAS,CAACM,QAAD,CAAT,CAdQ,CAgBD;AAED,KAlBD,CAkBC,OAAMK,GAAN,EAAW;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,OAAhB;AACH;AAIJ,GA1BD;;AAmCA,QAAMM,MAAM,GAAIf,MAAD,IAAY;AACvB,QAAG;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAAC,CAAD,CAAN,CAAUgB,QAAV,CAAmBC,KAAnB,CAAyB,eAAzB,EAA0C,CAA1C,CAAZ;AACJ,KAFD,CAEC,OAAMC,CAAN,EAAS;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH,KALsB,CAOxB;;AACF,GARD;;AASA,QAAMC,UAAU,GAAG,MAAM;AACtB;AACC,QAAG;AACCN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAGhB,IAAI,CAACkB,QAAL,GAAgBC,KAAhB,CAAsB,eAAtB,CAAH,GAA4C,iBAAxD;AACJ,KAFA,CAEA,OAAMC,CAAN,EAAS;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH;AAEH,GARD;;AASA,sBAEQ;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACN;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,gBACGlB,MAAM,CAACoB,GAAP,CAAW,CAACC,MAAD,EAASb,CAAT,kBAEJ,QAAC,UAAD;AACI,QAAA,SAAS,EAAC,OADd;AAGI,QAAA,YAAY,EAAE,CAAC,IAAD,EAAO,MAAP,CAHlB;AAII,QAAA,OAAO,EAAGR,MAAD,IAAYe,MAAM,CAAEf,MAAM,CAAC,CAAD,CAAR,CAJ/B;AAKI,QAAA,gBAAgB,EAAE,MAAMmB,UAAU,CAACE,MAAM,CAACC,SAAR,CALtC;AAAA,+BAOI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAASvB,MAAM,CAACQ,CAAD,CAAf,GAAqB;AAAxC,WAAZ;AAA2D,UAAA,SAAS,EAAC,MAArE;AAAA,iCACA;AAAA,sBAAKa,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAPJ,SAEShB,CAFT;AAAA;AAAA;AAAA;AAAA,cAFP;AADH;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UAFR;AA0BH;;GA1FQT,W;;KAAAA,W;AA6FT,eAAeA,WAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\n\n\n\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/random/3'\n  \n};\nlet path = '';\n\n\n\n//import response from 'response';\n\nfunction TinderCards() {\n    \n    const [people, setPeople] = useState([]);  \n    const [obj, setObj] = useState([]);\n  \n    useEffect(() => {\n        data();\n      \n\n    }, []);\n\n    const data = async () => {\n\n        try{\n            const res = await axios.get('https://dog.ceo/api/breeds/image/random/50');\n           // setPeople(res.data.message);\n            //console.log(res.request);\n            \n\n            let tmpArray = []\n            for (var i = 0; i < res.data.message.length; i++) {\n                tmpArray.push(res.data.message[i])\n             \n            }\n            \n           \n         \n   setPeople(tmpArray);\n           \n          //  console.log(tmpArray);\n          \n        }catch(err) {\n            console.log(err.message);\n        }\n\n\n    \n    }\n\n \n        \n     \n      \n    \n   \n   \n    const swiped = (people) => {\n        try{\n             console.log(people[1].toString.match(\"/breeds/(.*)/\")[1]); \n        }catch(e) {\n            console.log(e);\n        }\n       \n       // setLastDirection(direction);\n    }\n    const outOfFrame = () => {\n       // console.log(\"\"+path[1].match(\"/breeds/(.*)/\")[1] + \"left the screen\");\n        try{\n            console.log(\"\"+path.toString().match(\"/breeds/(.*)/\") + \"left the screen\");\n       }catch(e) {\n           console.log(e);\n       }\n      \n    }\n    return (\n       \n            <div className=\"tinderCards\">\n      <div className=\"tinderCards__cardContainer\">\n        {people.map((person, i) => (\n                        \n                <TinderCard\n                    className=\"swipe\"\n                    key={i}\n                    preventSwipe={[\"up\", \"down\"]}\n                    onSwipe={(people) => swiped( people[1])}\n                    onCardLeftScreen={() => outOfFrame(person.responsex)}\n                >\n                    <div style={{ backgroundImage: 'url(' + people[i] + ')' }} className='card'>\n                    <h3>{person.name}</h3>\n                    </div>\n                </TinderCard>\n\n                ))}\n      </div>\n\n         \n        </div>\n       \n                   \n    );\n}\n\n\nexport default TinderCards;"]},"metadata":{},"sourceType":"module"}