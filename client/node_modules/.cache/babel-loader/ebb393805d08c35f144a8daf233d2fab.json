{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Documents/GitHub/React-Journey/reactproj#7/tinder-clone/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link, Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AuthService from \"./services/auth.service\";\nimport Header from './components/Header';\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport TinderCard from './components/TinderCards';\nimport ChatScreen from './components/ChatScreen';\nimport Chats from './components/Chats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    console.log(AuthService.getCurrentUser());\n\n    if (user) {\n      setCurrentUser(user);\n      setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        backButton: \"/chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/chat\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        backButton: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/private\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 6\n  }, this);\n};\n\n_s(App, \"vzyMvzOR8f0fQtXMXSzvH3bXRQc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/josuedavid/Documents/GitHub/React-Journey/reactproj#7/tinder-clone/client/src/App.js"],"names":["React","useState","useEffect","Switch","Route","Link","Router","AuthService","Header","Login","Register","Home","BoardUser","BoardModerator","BoardAdmin","TinderCard","ChatScreen","Chats","App","props","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","currentUser","setCurrentUser","undefined","user","getCurrentUser","console","log","roles","includes","logOut","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA4C,kBAA5C;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CpB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAACyB,SAAD,CAA9C;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,IAAI,GAAGpB,WAAW,CAACqB,cAAZ,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAW,CAACqB,cAAZ,EAAZ;;AACA,QAAID,IAAJ,EAAU;AACRF,MAAAA,cAAc,CAACE,IAAD,CAAd;AACAN,MAAAA,qBAAqB,CAACM,IAAI,CAACI,KAAL,CAAWC,QAAX,CAAoB,gBAApB,CAAD,CAArB;AACAT,MAAAA,iBAAiB,CAACI,IAAI,CAACI,KAAL,CAAWC,QAAX,CAAoB,YAApB,CAAD,CAAjB;AACD;AACF,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,MAAM,GAAG,MAAM;AACnB1B,IAAAA,WAAW,CAAC2B,MAAZ;AACD,GAFD;;AAIA,sBAIG,QAAC,MAAD;AAAA,4BACG,QAAC,KAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWG,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXH,eAeG,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAfH,eAkBG,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,UAJH;AA4BD,CA/CD;;GAAMhB,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link, Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\nimport Header from './components/Header';\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\n\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport TinderCard from './components/TinderCards';\nimport ChatScreen from './components/ChatScreen';\n\nimport Chats from './components/Chats';\nconst App = (props) => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    console.log(AuthService.getCurrentUser());\n    if (user) {\n      setCurrentUser(user);\n      setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return (\n \n    \n\n     <Router>\n        <Route>\n          <Header backButton=\"/chat\" />\n          <ChatScreen/>\n        </Route>\n\n       <Route path=\"/\">\n         <SignIn />\n       </Route>\n\n        \n        <Route path=\"/chat\">\n          <Header backButton=\"/\" />\n          <Chats />\n        </Route>\n        <Route path=\"/\"> \n        </Route >\n          \n        <Route path=\"/private\">\n\n        </Route>\n      </ Router>\n\n      );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}