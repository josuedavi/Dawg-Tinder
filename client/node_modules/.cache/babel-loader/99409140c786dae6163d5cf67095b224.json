{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/random/3'\n}; //import response from 'response';\n\nfunction TinderCards() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  useEffect(() => {\n    data();\n  }, []);\n\n  const data = async () => {\n    try {\n      const res = await axios.get('https://dog.ceo/api/breeds/image/random/3'); // setPeople(res.data.message);\n\n      console.log(res);\n      let tmpArray = [];\n\n      for (var i = 0; i < res.data.message.length; i++) {\n        tmpArray.push(res.data.message[i]);\n      }\n\n      setPeople(tmpArray);\n      console.log(people);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  function handleChange(event) {\n    const search = event.target.value;\n    setSearch(search);\n  }\n\n  function noOfPics(event) {\n    const perPage = event.target.value;\n    setPerPage(perPage);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const swiped = (direction, nameToDelete) => {\n    console.log(\"removing: \" + nameToDelete); // setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + \"left the screen\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: people.map(({\n      person,\n      key\n    }) => {\n      for (var i = 0; i < person.length; i++) {\n        /*#__PURE__*/\n        _jsxDEV(\"img\", {\n          src: person[i]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TinderCards, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n\n_c = TinderCards;\nexport default TinderCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js"],"names":["React","useEffect","useState","TinderCard","axios","createClient","Card","options","method","url","TinderCards","people","setPeople","data","res","get","console","log","tmpArray","i","message","length","push","err","alert","handleChange","event","search","target","value","setSearch","noOfPics","perPage","setPerPage","handleSubmit","preventDefault","swiped","direction","nameToDelete","outOfFrame","name","map","person","key"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAE;AAFS,CAAhB,C,CAQA;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,IAAI,GAAG,YAAY;AAErB,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,2CAAV,CAAlB,CADD,CAEA;;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAGA,UAAII,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACD,IAAJ,CAASO,OAAT,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9CD,QAAAA,QAAQ,CAACI,IAAT,CAAcR,GAAG,CAACD,IAAJ,CAASO,OAAT,CAAiBD,CAAjB,CAAd;AACH;;AAEDP,MAAAA,SAAS,CAACM,QAAD,CAAT;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,KAbD,CAaC,OAAMY,GAAN,EAAW;AACRC,MAAAA,KAAK,CAACD,GAAG,CAACH,OAAL,CAAL;AACH;AAIJ,GArBD;;AAsBA,WAASK,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AACAC,IAAAA,SAAS,CAACH,MAAD,CAAT;AACH;;AACD,WAASI,QAAT,CAAkBL,KAAlB,EAAyB;AACrB,UAAMM,OAAO,GAAGN,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACAI,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH;;AAED,WAASE,YAAT,CAAsBR,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACS,cAAN;AAIH;;AAOD,QAAMC,MAAM,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AACxCtB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeqB,YAA3B,EADwC,CAEzC;AACF,GAHD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAI,GAAG,iBAAnB;AAEH,GAHD;;AAIA,sBACI;AAAA,cAGI7B,MAAM,CAAC8B,GAAP,CAAY,CAAE;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAAF,KAAqB;AAErC,WAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,MAAM,CAACrB,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACpC;AAAA;AAAe,UAAA,GAAG,EAAEuB,MAAM,CAACvB,CAAD;AAA1B,WAAUwB,GAAV;AAAA;AAAA;AAAA;AAAA;AACH;AAER,KANW;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA3EQjC,W;;KAAAA,W;AA8ET,eAAeA,WAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\n\n\n\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/random/3'\n  \n};\n\n\n\n//import response from 'response';\n\nfunction TinderCards() {\n    \n    const [people, setPeople] = useState([]);  \n  \n  \n    useEffect(() => {\n        data();\n    }, []);\n\n    const data = async () => {\n\n        try{\n            const res = await axios.get('https://dog.ceo/api/breeds/image/random/3');\n           // setPeople(res.data.message);\n            console.log(res);\n\n\n            let tmpArray = []\n            for (var i = 0; i < res.data.message.length; i++) {\n                tmpArray.push(res.data.message[i])\n            }\n\n            setPeople(tmpArray);\n            console.log(people);\n        }catch(err) {\n            alert(err.message);\n        }\n\n\n    \n    }\n    function handleChange(event) {  \n        const search = event.target.value;  \n        setSearch(search);  \n    }  \n    function noOfPics(event) {  \n        const perPage = event.target.value;  \n        setPerPage(perPage);  \n    }  \n  \n    function handleSubmit(event) {  \n        event.preventDefault();  \n        \n    \n  \n    }  \n        \n     \n      \n    \n   \n   \n    const swiped = (direction, nameToDelete) => {\n        console.log(\"removing: \" + nameToDelete);\n       // setLastDirection(direction);\n    }\n    const outOfFrame = (name) => {\n        console.log(name + \"left the screen\");\n\n    }\n    return (\n        <div>\n           \n\n         {  people.map( ( {person, key} ) => {\n    \n        for (var i = 0; i < person.length; i++) {\n            <img key={key} src={person[i]} />\n        }\n    \n})}\n        </div>\n       \n                   \n    );\n}\n\n\nexport default TinderCards;"]},"metadata":{},"sourceType":"module"}