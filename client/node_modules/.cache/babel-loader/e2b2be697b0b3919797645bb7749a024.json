{"ast":null,"code":"/**\n * Check if `req` accepts the given `encoding`\n *\n * @api public\n * @param {http.IncomingMessage|Array} req\n * @param {String} encoding\n * @return {Boolean}\n */\nexports = module.exports = function (req, encoding) {\n  var encodings = Array.isArray(req) ? req : exports.encodings(req);\n  return !!~encodings.indexOf(encoding);\n};\n/**\n * Get accepted encodings from `req`\n *\n * @api public\n * @param {http.IncomingMessage} req\n * @return {Array}\n */\n\n\nexports.encodings = function encodings(req) {\n  var accept = req.headers['accept-encoding'];\n  return accept ? accept.trim().split(/ *, */) : [];\n};","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/node_modules/accept-encoding/index.js"],"names":["exports","module","req","encoding","encodings","Array","isArray","indexOf","accept","headers","trim","split"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiB,UAAUE,GAAV,EAAeC,QAAf,EAAyB;AAClD,MAAIC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcJ,GAAd,IACVA,GADU,GAEVF,OAAO,CAACI,SAAR,CAAkBF,GAAlB,CAFN;AAIA,SAAO,CAAC,CAAC,CAACE,SAAS,CAACG,OAAV,CAAkBJ,QAAlB,CAAV;AACD,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,OAAO,CAACI,SAAR,GAAoB,SAASA,SAAT,CAAmBF,GAAnB,EAAwB;AAC1C,MAAIM,MAAM,GAAGN,GAAG,CAACO,OAAJ,CAAY,iBAAZ,CAAb;AAEA,SAAOD,MAAM,GACTA,MAAM,CAACE,IAAP,GAAcC,KAAd,CAAoB,OAApB,CADS,GAET,EAFJ;AAGD,CAND","sourcesContent":["\n/**\n * Check if `req` accepts the given `encoding`\n *\n * @api public\n * @param {http.IncomingMessage|Array} req\n * @param {String} encoding\n * @return {Boolean}\n */\n\nexports = module.exports = function (req, encoding) {\n  var encodings = Array.isArray(req)\n      ? req\n      : exports.encodings(req);\n\n  return !!~encodings.indexOf(encoding);\n};\n\n/**\n * Get accepted encodings from `req`\n *\n * @api public\n * @param {http.IncomingMessage} req\n * @return {Array}\n */\n\nexports.encodings = function encodings(req) {\n  var accept = req.headers['accept-encoding'];\n\n  return accept\n    ? accept.trim().split(/ *, */)\n    : [];\n};\n"]},"metadata":{},"sourceType":"script"}