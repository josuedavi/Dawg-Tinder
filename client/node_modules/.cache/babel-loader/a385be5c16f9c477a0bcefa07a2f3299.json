{"ast":null,"code":"//Reducer for handling posts api call\nimport * as ACTION_TYPES from '../actions/action_types';\nconst initialState = {\n  db_posts: [],\n  db_comments: []\n};\n\nconst Posts_Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_DB_POSTS_SUCCESS:\n      return { ...state,\n        db_posts: action.payload\n      };\n\n    case ACTION_TYPES.REMOVE_DB_POSTS:\n      return { ...state,\n        db_posts: []\n      };\n\n    case ACTION_TYPES.FETCH_DB_POST_COMMENTS_SUCCESS:\n      return { ...state,\n        db_comments: action.payload\n      };\n\n    case ACTION_TYPES.FETCH_DB_POST_COMMENTS_FAILURE:\n      return { ...state,\n        db_comments: []\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Posts_Reducer;\nexport default Posts_Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts_Reducer\");","map":{"version":3,"sources":["/Users/josuedavid/Documents/GitHub/React-Journey/reactproj#7/tinder-clone/client/src/store/reducers/post_reducer.js"],"names":["ACTION_TYPES","initialState","db_posts","db_comments","Posts_Reducer","state","action","type","FETCH_DB_POSTS_SUCCESS","payload","REMOVE_DB_POSTS","FETCH_DB_POST_COMMENTS_SUCCESS","FETCH_DB_POST_COMMENTS_FAILURE"],"mappings":"AAAA;AACA,OAAO,KAAKA,YAAZ,MAA8B,yBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,YAAY,CAACQ,sBAAlB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACG;AAFZ,OAAP;;AAIF,SAAKT,YAAY,CAACU,eAAlB;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKF,YAAY,CAACW,8BAAlB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFf,OAAP;;AAIF,SAAKT,YAAY,CAACY,8BAAlB;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF;AACE,aAAOE,KAAP;AAtBJ;AAwBD,CAzBD;;KAAMD,a;AA2BN,eAAeA,aAAf","sourcesContent":["//Reducer for handling posts api call\r\nimport * as ACTION_TYPES from '../actions/action_types';\r\n\r\nconst initialState = {\r\n  db_posts: [],\r\n  db_comments: []\r\n}\r\n\r\nconst Posts_Reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_DB_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        db_posts: action.payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        db_posts: []\r\n      }\r\n    case ACTION_TYPES.FETCH_DB_POST_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        db_comments: action.payload\r\n      }\r\n    case ACTION_TYPES.FETCH_DB_POST_COMMENTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        db_comments: []\r\n      }\r\n    default:\r\n      return state\r\n    }\r\n}\r\n\r\nexport default Posts_Reducer;\r\n"]},"metadata":{},"sourceType":"module"}