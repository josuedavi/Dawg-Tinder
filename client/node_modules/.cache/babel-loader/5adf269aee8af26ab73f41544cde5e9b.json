{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/random'\n};\nconst data = axios.request(options).then(function (response) {\n  console.log(response.data);\n  setPeople(response.data);\n}).catch(function (error) {\n  console.error(error);\n}); //import response from 'response';\n\nfunction TinderCards() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [perPage, setPerPage] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [people, setPeople] = useState([]);\n\n  function handleChange(event) {\n    const search = event.target.value;\n    setSearch(search);\n  }\n\n  function noOfPics(event) {\n    const perPage = event.target.value;\n    setPerPage(perPage);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const swiped = (direction, nameToDelete) => {\n    console.log(\"removing: \" + nameToDelete); // setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + \"left the screen\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(home => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: home.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TinderCards, \"f4f64CZORhBG69QBZFnu2rkGV04=\");\n\n_c = TinderCards;\nexport default TinderCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js"],"names":["React","useEffect","useState","TinderCard","axios","createClient","Card","options","method","url","data","request","then","response","console","log","setPeople","catch","error","TinderCards","search","setSearch","perPage","setPerPage","result","setResult","people","handleChange","event","target","value","noOfPics","handleSubmit","preventDefault","swiped","direction","nameToDelete","outOfFrame","name","map","home","message"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAE;AAFS,CAAhB;AAMA,MAAMC,IAAI,GAAGN,KAAK,CAACO,OAAN,CAAcJ,OAAd,EAAuBK,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACAM,EAAAA,SAAS,CAACH,QAAQ,CAACH,IAAV,CAAT;AACH,CAHY,EAGVO,KAHU,CAGJ,UAAUC,KAAV,EAAiB;AACtBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACH,CALY,CAAb,C,CAOA;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,MAAD,EAASV,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASyB,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAMR,MAAM,GAAGQ,KAAK,CAACC,MAAN,CAAaC,KAA5B;AACAT,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH;;AACD,WAASW,QAAT,CAAkBH,KAAlB,EAAyB;AACrB,UAAMN,OAAO,GAAGM,KAAK,CAACC,MAAN,CAAaC,KAA7B;AACAP,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH;;AAED,WAASU,YAAT,CAAsBJ,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACK,cAAN;AAIH;;AAOD,QAAMC,MAAM,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AACxCtB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeqB,YAA3B,EADwC,CAEzC;AACF,GAHD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAI,GAAG,iBAAnB;AAEH,GAHD;;AAIA,sBACI;AAAA,cACM5B,IAAI,CAAC6B,GAAL,CAASC,IAAI,iBAAI;AAAA,gBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAAjB;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA1CQtB,W;;KAAAA,W;AA4CT,eAAeA,WAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\n\n\n\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/random'\n  \n};\n\nconst data = axios.request(options).then(function (response) {\n    console.log(response.data);\n    setPeople(response.data);\n}).catch(function (error) {\n    console.error(error);\n});\n\n//import response from 'response';\n\nfunction TinderCards() {\n    const [search, setSearch] = useState(\"\");  \n    const [perPage, setPerPage] = useState(\"\");  \n    const [result, setResult] = useState([]);  \n    const [people, setPeople] = useState([]);  \n  \n    function handleChange(event) {  \n        const search = event.target.value;  \n        setSearch(search);  \n    }  \n    function noOfPics(event) {  \n        const perPage = event.target.value;  \n        setPerPage(perPage);  \n    }  \n  \n    function handleSubmit(event) {  \n        event.preventDefault();  \n        \n    \n  \n    }  \n        \n     \n      \n    \n   \n   \n    const swiped = (direction, nameToDelete) => {\n        console.log(\"removing: \" + nameToDelete);\n       // setLastDirection(direction);\n    }\n    const outOfFrame = (name) => {\n        console.log(name + \"left the screen\");\n\n    }\n    return (\n        <div>\n             {data.map(home => <div>{home.message}</div>)}\n        </div>\n       \n                   \n    );\n}\n\nexport default TinderCards;"]},"metadata":{},"sourceType":"module"}