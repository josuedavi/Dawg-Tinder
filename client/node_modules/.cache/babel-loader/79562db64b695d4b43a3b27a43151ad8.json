{"ast":null,"code":"var stream = require('stream'),\n    mime = require('mime'),\n    util = require('util'),\n    bl = require('bl'),\n    caseless = require('caseless'),\n    bestencoding = require('best-encoding'),\n    zlib = require('zlib'); // This could eventually be its own module.\n\n\nfunction mutations(src, dest) {\n  if (src.headers && dest.setHeader) {\n    for (var i in src.headers) dest.setHeader(i, src.headers[i]);\n  }\n\n  if (src.path && (!src.headers || (src.getHeader ? !src.getHeader('content-type') : !src.headers['content-type'])) && dest.setHeader) {\n    src.on('error', function (e) {\n      dest.statusCode = 404;\n      dest.setHeader('content-type', 'text/plain');\n      dest.write('Not Found');\n      dest.end();\n    });\n    dest.setHeader('content-type', mime.lookup(src.path));\n  }\n\n  if (src.statusCode) dest.statusCode = src.statusCode;\n}\n\nfunction Response(view, opts) {\n  var self = this;\n\n  if (typeof view !== 'string' && typeof view !== 'function' && !Buffer.isBuffer(view)) {\n    opts = view;\n    view = null;\n  }\n\n  self.opts = opts || {};\n  if (self.opts.gzip) self.opts.compress = gzip;\n  self.view = view;\n  self.buffering = bl();\n  self.headers = {};\n  self.dests = [];\n  stream.Transform.call(self);\n  self.on('pipe', function (src) {\n    mutations(src, self);\n    src.on('error', function (e) {\n      // TODO: Handle 404 errors\n      self.emit('error', e);\n    });\n  });\n  self.on('error', self.error.bind(self));\n\n  if (view) {\n    if (typeof view === 'string' || Buffer.isBuffer(view)) {\n      process.nextTick(function () {\n        self.end(view);\n      });\n    }\n  }\n\n  caseless.httpify(this, this.headers);\n\n  if (self.opts.compress) {\n    var encoding;\n\n    if (self.opts.compress.headers) {\n      encoding = bestencoding(self.opts.compress);\n    } else if (typeof self.opts.compress === 'string') {\n      encoding = self.opts.compress;\n    } else {\n      encoding = 'gzip';\n    }\n\n    if (encoding && encoding !== 'identity') {\n      if (encoding !== 'gzip' && encoding !== 'deflate') throw new Error(\"I don't know this encoding.\");\n      self.statusCode = 200;\n      self.setHeader('content-encoding', encoding);\n      if (encoding === 'gzip') self.compressor = zlib.createGzip();\n      if (encoding === 'deflate') self.compressor = zlib.createDeflate();\n      stream.Transform.prototype.pipe.call(this, self.compressor);\n    }\n  }\n}\n\nutil.inherits(Response, stream.Transform);\n\nResponse.prototype._transform = function (chunk, encoding, cb) {\n  if (this._pipe) {\n    this._pipe();\n\n    this._pipe = null;\n  }\n\n  if (typeof this.view === 'function') this.buffering.append(chunk);else this.push(chunk);\n  cb(null);\n};\n\nResponse.prototype.pipe = function () {\n  this.dests.push(arguments[0]);\n  if (this.compressor) this.compressor.pipe.apply(this.compressor, arguments);else stream.Transform.prototype.pipe.apply(this, arguments);\n};\n\nResponse.prototype._pipe = function () {\n  var self = this;\n  this.dests.forEach(function (dest) {\n    mutations(self, dest);\n  });\n};\n\nResponse.prototype.error = function (e, status) {\n  var self = this;\n\n  if (!status && typeof e === 'number') {\n    self.statusCode = e;\n    self.end();\n    return;\n  }\n\n  self.statusCode = status || 500;\n  if (self._erroring) return;\n  self._erroring = true;\n\n  if (typeof self.view === 'function') {\n    self.view.call(self, e, null, function (e, data) {\n      if (e) return self.end('Internal Server Error');\n      self.end(data);\n    });\n  } else {\n    // TODO: Default tracebacks on errors.\n    self.end(e ? e.message || 'Error' : 'Error');\n  }\n};\n\nResponse.prototype.status = function (statusCode) {\n  this.statusCode = statusCode;\n  return this;\n};\n\nResponse.prototype.location = function (location) {\n  this.setHeader('Location', location);\n  return this;\n};\n\nResponse.prototype.end = function (data) {\n  var a = arguments,\n      self = this;\n  if (data) this.write(data);\n\n  if (typeof self.view === 'function') {\n    self.view.call(self, null, self.buffering, function (e, data) {\n      if (e) self.error(e);\n\n      if (self.compressor) {\n        self.compressor.write(data);\n      } else {\n        self.dests.forEach(function (dest) {\n          dest.write(data);\n        });\n      }\n\n      stream.Transform.prototype.end.apply(self);\n    });\n  } else {\n    stream.Transform.prototype.end.apply(self);\n  }\n};\n\nfunction response(view, opts) {\n  return new Response(view, opts);\n}\n\nvar typemap = {};\n\ntypemap['txt'] = function (view) {\n  return typeof view != 'string' ? view.toString() : view;\n};\n\ntypemap['json'] = function (view) {\n  return JSON.stringify(view);\n};\n\nObject.keys(mime.types).forEach(function (mimeName) {\n  // set mime convenience methods\n  function _response(view, opts) {\n    view = typemap[mimeName] ? typemap[mimeName](view) : view;\n    var r = response(view, opts);\n    r.setHeader('content-type', mime.types[mimeName]);\n    return r;\n  }\n\n  response[mimeName] = _response; // set mime methods\n\n  Response.prototype[mimeName] = function (view) {\n    view = typemap[mimeName] ? typemap[mimeName](view) : view;\n    var self = this;\n    self.setHeader('content-type', mime.types[mimeName]);\n    process.nextTick(function () {\n      self.end(view);\n    });\n    return this;\n  };\n});\n\nresponse.error = function () {\n  var r = response();\n  r.error.apply(r, arguments);\n  return r;\n}; // TODO alias express methods\n// .charset\n// .send\n// .jsonp\n// TODO redirect api\n// TODO error, notfound\n\n\nmodule.exports = response;","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/node_modules/response/index.js"],"names":["stream","require","mime","util","bl","caseless","bestencoding","zlib","mutations","src","dest","headers","setHeader","i","path","getHeader","on","e","statusCode","write","end","lookup","Response","view","opts","self","Buffer","isBuffer","gzip","compress","buffering","dests","Transform","call","emit","error","bind","process","nextTick","httpify","encoding","Error","compressor","createGzip","createDeflate","prototype","pipe","inherits","_transform","chunk","cb","_pipe","append","push","arguments","apply","forEach","status","_erroring","data","message","location","a","response","typemap","toString","JSON","stringify","Object","keys","types","mimeName","_response","r","module","exports"],"mappings":"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","sourcesContent":["var stream = require('stream')\n  , mime = require('mime')\n  , util = require('util')\n  , bl = require('bl')\n  , caseless = require('caseless')\n  , bestencoding = require('best-encoding')\n  , zlib = require('zlib')\n  ;\n\n// This could eventually be its own module.\nfunction mutations (src, dest) {\n  if (src.headers && dest.setHeader) {\n    for (var i in src.headers) dest.setHeader(i, src.headers[i])\n  }\n  if (src.path &&\n      (!src.headers || (src.getHeader ? !src.getHeader('content-type') : !src.headers['content-type'])) &&\n      dest.setHeader) {\n    src.on('error', function (e) {\n      dest.statusCode = 404\n      dest.setHeader('content-type', 'text/plain')\n      dest.write('Not Found')\n      dest.end()\n    })\n    dest.setHeader('content-type', mime.lookup(src.path))\n  }\n  if (src.statusCode) dest.statusCode = src.statusCode\n}\n\nfunction Response (view, opts) {\n  var self = this\n  if (typeof view !== 'string' && typeof view !== 'function' && !Buffer.isBuffer(view)) {\n    opts = view\n    view = null\n  }\n  self.opts = opts || {}\n  if (self.opts.gzip) self.opts.compress = gzip\n  self.view = view\n  self.buffering = bl()\n  self.headers = {}\n  self.dests = []\n  stream.Transform.call(self)\n  self.on('pipe', function (src) {\n    mutations(src, self)\n    src.on('error', function (e) {\n      // TODO: Handle 404 errors\n      self.emit('error', e)\n    })\n  })\n  self.on('error', self.error.bind(self))\n  if (view) {\n    if (typeof view === 'string' || Buffer.isBuffer(view)) {\n      process.nextTick(function () {\n        self.end(view)\n      })\n    }\n  }\n  caseless.httpify(this, this.headers)\n  if (self.opts.compress) {\n    var encoding\n    if (self.opts.compress.headers) {\n      encoding = bestencoding(self.opts.compress)\n    } else if (typeof self.opts.compress === 'string') {\n      encoding = self.opts.compress\n    } else {\n      encoding = 'gzip'\n    }\n\n    if (encoding && encoding !== 'identity') {\n      if (encoding !== 'gzip' && encoding !== 'deflate') throw new Error(\"I don't know this encoding.\")\n      self.statusCode = 200\n      self.setHeader('content-encoding', encoding)\n      if (encoding === 'gzip') self.compressor = zlib.createGzip()\n      if (encoding === 'deflate') self.compressor = zlib.createDeflate()\n      stream.Transform.prototype.pipe.call(this, self.compressor)\n    }\n  }\n}\nutil.inherits(Response, stream.Transform)\n\nResponse.prototype._transform = function (chunk, encoding, cb) {\n  if (this._pipe) {\n    this._pipe()\n    this._pipe = null\n  }\n  if (typeof this.view === 'function') this.buffering.append(chunk)\n  else this.push(chunk)\n  cb(null)\n}\nResponse.prototype.pipe = function () {\n  this.dests.push(arguments[0])\n  if (this.compressor) this.compressor.pipe.apply(this.compressor, arguments)\n  else stream.Transform.prototype.pipe.apply(this, arguments)\n}\nResponse.prototype._pipe = function () {\n  var self = this\n  this.dests.forEach(function (dest) {\n    mutations(self, dest)\n  })\n}\nResponse.prototype.error = function (e, status) {\n  var self = this\n\n  if (!status && typeof e === 'number') {\n    self.statusCode = e\n    self.end()\n    return\n  }\n\n  self.statusCode = status || 500\n  if (self._erroring) return\n  self._erroring = true\n  if (typeof self.view === 'function') {\n    self.view.call(self, e, null, function (e, data) {\n      if (e) return self.end('Internal Server Error')\n      self.end(data)\n    })\n  } else {\n    // TODO: Default tracebacks on errors.\n    self.end( e ? e.message || 'Error' : 'Error')\n  }\n}\nResponse.prototype.status = function(statusCode) {\n  this.statusCode = statusCode;\n  return this\n}\nResponse.prototype.location = function(location) {\n  this.setHeader('Location', location)\n  return this\n}\nResponse.prototype.end = function (data) {\n  var a = arguments\n    , self = this\n    ;\n  if (data) this.write(data)\n  if (typeof self.view === 'function') {\n    self.view.call(self, null, self.buffering, function (e, data) {\n      if (e) self.error(e)\n      if (self.compressor) {\n        self.compressor.write(data)\n      } else {\n        self.dests.forEach(function (dest) {\n          dest.write(data)\n        })\n      }\n      stream.Transform.prototype.end.apply(self)\n    })\n  } else {\n    stream.Transform.prototype.end.apply(self)\n  }\n}\n\nfunction response (view, opts) {\n  return new Response(view, opts)\n}\n\nvar typemap = {};\ntypemap['txt'] = function(view) {\n  return (typeof view != 'string') ? view.toString() : view\n}\ntypemap['json'] = function(view) {\n  return JSON.stringify(view)\n}\n\nObject.keys(mime.types).forEach(function (mimeName) {\n\n    // set mime convenience methods\n  function _response (view, opts) {\n    view = (typemap[mimeName]) ? typemap[mimeName](view) : view\n    var r = response(view, opts)\n    r.setHeader('content-type', mime.types[mimeName])\n    return r\n  }\n  response[mimeName] = _response\n  // set mime methods\n  Response.prototype[mimeName] = function (view) {\n    view = (typemap[mimeName]) ? typemap[mimeName](view) : view\n    var self = this\n    self.setHeader('content-type', mime.types[mimeName])\n    process.nextTick(function () {\n        self.end(view)\n    })\n    return this\n  }\n})\n\nresponse.error = function () {\n  var r = response()\n  r.error.apply(r, arguments)\n  return r\n}\n\n// TODO alias express methods\n// .charset\n// .send\n// .jsonp\n\n// TODO redirect api\n// TODO error, notfound\n\nmodule.exports = response\n"]},"metadata":{},"sourceType":"script"}