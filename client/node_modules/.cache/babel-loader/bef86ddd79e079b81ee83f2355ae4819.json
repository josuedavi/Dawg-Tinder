{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/'\n}; //import response from 'response';\n\nfunction TinderCards() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [perPage, setPerPage] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [people, setPeople] = useState([]);\n  const data = axios.request(options).then(function (response) {\n    console.log(response.data);\n    setPeople(response.data);\n  }).catch(function (error) {\n    console.error(error);\n  });\n\n  function handleChange(event) {\n    const search = event.target.value;\n    setSearch(search);\n  }\n\n  function noOfPics(event) {\n    const perPage = event.target.value;\n    setPerPage(perPage);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const swiped = (direction, nameToDelete) => {\n    console.log(\"removing: \" + nameToDelete); // setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + \"left the screen\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: people.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TinderCards, \"f4f64CZORhBG69QBZFnu2rkGV04=\");\n\n_c = TinderCards;\nexport default TinderCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js"],"names":["React","useEffect","useState","TinderCard","axios","createClient","Card","options","method","url","TinderCards","search","setSearch","perPage","setPerPage","result","setResult","people","setPeople","data","request","then","response","console","log","catch","error","handleChange","event","target","value","noOfPics","handleSubmit","preventDefault","swiped","direction","nameToDelete","outOfFrame","name","message"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAE;AAFS,CAAhB,C,CAQA;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMiB,IAAI,GAAGf,KAAK,CAACgB,OAAN,CAAcb,OAAd,EAAuBc,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACAD,IAAAA,SAAS,CAACI,QAAQ,CAACH,IAAV,CAAT;AACH,GAHY,EAGVM,KAHU,CAGJ,UAAUC,KAAV,EAAiB;AACtBH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,GALY,CAAb;;AAOA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAMjB,MAAM,GAAGiB,KAAK,CAACC,MAAN,CAAaC,KAA5B;AACAlB,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH;;AACD,WAASoB,QAAT,CAAkBH,KAAlB,EAAyB;AACrB,UAAMf,OAAO,GAAGe,KAAK,CAACC,MAAN,CAAaC,KAA7B;AACAhB,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH;;AAED,WAASmB,YAAT,CAAsBJ,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACK,cAAN;AAIH;;AAOD,QAAMC,MAAM,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AACxCb,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeY,YAA3B,EADwC,CAEzC;AACF,GAHD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBf,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,GAAG,iBAAnB;AAEH,GAHD;;AAIA,sBACI;AAAA,2BACK;AAAK,MAAA,GAAG,EAAErB,MAAM,CAACsB;AAAjB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjDQ7B,W;;KAAAA,W;AAmDT,eAAeA,WAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\n\n\n\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/image/'\n  \n};\n\n\n\n//import response from 'response';\n\nfunction TinderCards() {\n    const [search, setSearch] = useState(\"\");  \n    const [perPage, setPerPage] = useState(\"\");  \n    const [result, setResult] = useState([]);  \n    const [people, setPeople] = useState([]);  \n  \n    const data = axios.request(options).then(function (response) {\n        console.log(response.data);\n        setPeople(response.data);\n    }).catch(function (error) {\n        console.error(error);\n    });\n\n    function handleChange(event) {  \n        const search = event.target.value;  \n        setSearch(search);  \n    }  \n    function noOfPics(event) {  \n        const perPage = event.target.value;  \n        setPerPage(perPage);  \n    }  \n  \n    function handleSubmit(event) {  \n        event.preventDefault();  \n        \n    \n  \n    }  \n        \n     \n      \n    \n   \n   \n    const swiped = (direction, nameToDelete) => {\n        console.log(\"removing: \" + nameToDelete);\n       // setLastDirection(direction);\n    }\n    const outOfFrame = (name) => {\n        console.log(name + \"left the screen\");\n\n    }\n    return (\n        <div>\n             <img src={people.message} />\n        </div>\n       \n                   \n    );\n}\n\nexport default TinderCards;"]},"metadata":{},"sourceType":"module"}