{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js\";\nimport React, { setState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TinderCards extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.swiped = (direction, nameToDelete) => {\n      console.log(\"removing: \" + nameToDelete); // setLastDirection(direction);\n    };\n\n    this.outOfFrame = name => {\n      console.log(name + \"left the screen\");\n    };\n\n    this.state = {\n      people: []\n    };\n    this.swiped = this.swiped.bind(this);\n    this.outOfFrame = this.outOfFrame.bind(this);\n  }\n\n  componentDidMount() {\n    // declare a response interceptor\n    axios.interceptors.response.use(response => {\n      // do something with the response data\n      console.log('Response was received');\n      return response;\n    }, error => {\n      // handle the response error\n      return Promise.reject(error);\n    }); // sent a GET request\n\n    axios.get('https://api.github.com/users/mapbox').then(response => {\n      console.log(response);\n      this.setState({\n        people: response\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.people.map(person => /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        preventSwipe: [\"up\", \"down\"],\n        onSwipe: dir => this.swiped(dir, person.name),\n        onCardLeftScreen: () => this.outOfFrame(person.name),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: \"url(\" + this.state.people.url + \")\"\n          },\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TinderCards;","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js"],"names":["React","setState","TinderCard","axios","createClient","Card","TinderCards","Component","constructor","props","swiped","direction","nameToDelete","console","log","outOfFrame","name","state","people","bind","componentDidMount","interceptors","response","use","error","Promise","reject","get","then","catch","data","status","headers","request","message","render","map","person","dir","backgroundImage","url"],"mappings":"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","sourcesContent":["\nimport React, {setState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\n\n\n\n\n\n\nclass TinderCards extends React.Component {\n    constructor(props) {\n        super(props);\n    this.state = {\n        people: []\n    }  \nthis.swiped = this.swiped.bind(this);this.outOfFrame = this.outOfFrame.bind(this);\n}\n\n componentDidMount(){\n\n\n\n        // declare a response interceptor\naxios.interceptors.response.use((response) => {\n    // do something with the response data\n    console.log('Response was received');\n  \n    return response;\n  }, error => {\n    // handle the response error\n    return Promise.reject(error);\n  });\n  \n  // sent a GET request\n  axios.get('https://api.github.com/users/mapbox')\n    .then(response => {\n      console.log(response);\n   this.setState({people: response}).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n  });\n  \n    });\n  \n        }\n \n         swiped = (direction, nameToDelete) => {\n            console.log(\"removing: \" + nameToDelete);\n           // setLastDirection(direction);\n        }\n        outOfFrame = (name) => {\n            console.log(name + \"left the screen\");\n    \n        }\n\n    render() {\n       \n       \n    \n      \n            \n         \n          \n        \n       \n      \n        return (\n            <div>\n               \n    \n                 {this.state.people.map((person) => (\n              <TinderCard\n                className=\"swipe\"\n                key={person.name}\n                preventSwipe={[\"up\", \"down\"]}\n                onSwipe={(dir) => this.swiped(dir, person.name)}\n                onCardLeftScreen={() => this.outOfFrame(person.name)}\n              >\n                <div\n                  style={{  backgroundImage: \"url(\" + this.state.people.url + \")\",}}\n                  className=\"card\"\n                >\n                  <h3>{person.name}</h3>\n                </div>\n              </TinderCard>\n            ))}\n            </div>\n           \n                       \n        );\n    }\n}\nexport default TinderCards;"]},"metadata":{},"sourceType":"module"}