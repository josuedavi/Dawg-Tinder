{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/list/all'\n}; //import response from 'response';\n\nfunction TinderCards() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [perPage, setPerPage] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [people, setPeople] = useState([]);\n\n  function handleChange(event) {\n    const search = event.target.value;\n    setSearch(search);\n  }\n\n  function noOfPics(event) {\n    const perPage = event.target.value;\n    setPerPage(perPage);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      axios.request(options).then(function (response) {\n        console.log(response.data);\n        setPeople(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const swiped = (direction, nameToDelete) => {\n    console.log(\"removing: \" + nameToDelete); // setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + \"left the screen\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: people && people.map(person => {\n      return /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        preventSwipe: [\"up\", \"down\"],\n        onSwipe: dir => swiped(dir, person.name),\n        onCardLeftScreen: () => outOfFrame(person.name),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: `url(${person[0].src.landscape})`\n          },\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TinderCards, \"u94KuI4X/Nzkye3IbPdE2wyKaz4=\");\n\n_c = TinderCards;\nexport default TinderCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TinderCards\");","map":{"version":3,"sources":["/Users/josuedavid/Desktop/tinder-clone/src/components/TinderCards.js"],"names":["React","useEffect","useState","TinderCard","axios","createClient","Card","options","method","url","TinderCards","search","setSearch","perPage","setPerPage","result","setResult","people","setPeople","handleChange","event","target","value","noOfPics","handleSubmit","preventDefault","fetchData","request","then","response","console","log","data","catch","error","swiped","direction","nameToDelete","outOfFrame","name","map","person","dir","backgroundImage","src","landscape"],"mappings":"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","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport axios from \"axios\";\nimport '../assets/TinderCards.css';\nimport { createClient } from 'pexels';\nimport { Card } from 'react-bootstrap';\n\n\n\nconst options = {\n  method: 'GET',\n  url: 'https://dog.ceo/api/breeds/list/all'\n  \n};\n\n\n//import response from 'response';\n\nfunction TinderCards() {\n    const [search, setSearch] = useState(\"\");  \n    const [perPage, setPerPage] = useState(\"\");  \n    const [result, setResult] = useState([]);  \n    const [people, setPeople] = useState([]);  \n  \n    function handleChange(event) {  \n        const search = event.target.value;  \n        setSearch(search);  \n    }  \n    function noOfPics(event) {  \n        const perPage = event.target.value;  \n        setPerPage(perPage);  \n    }  \n  \n    function handleSubmit(event) {  \n        event.preventDefault();  \n        \n    \n  \n    }  \n\n\n    useEffect(() => {\n        async function fetchData() {\n            axios.request(options).then(function (response) {\n                console.log(response.data);\n                setPeople(response.data);\n            }).catch(function (error) {\n                console.error(error);\n            });\n        }\n        fetchData();\n      }, []);\n    \n   \n   \n    const swiped = (direction, nameToDelete) => {\n        console.log(\"removing: \" + nameToDelete);\n       // setLastDirection(direction);\n    }\n    const outOfFrame = (name) => {\n        console.log(name + \"left the screen\");\n\n    }\n    return (\n        <div>\n              { people && people.map((person) => {\n         return (\n<TinderCard\n            className=\"swipe\"\n            key={person.name}\n            preventSwipe={[\"up\", \"down\"]}\n            onSwipe={(dir) => swiped(dir, person.name)}\n            onCardLeftScreen={() => outOfFrame(person.name)}\n          >\n            <div\n              style={{ backgroundImage: `url(${person[0].src.landscape})` }}\n              className=\"card\"\n            >\n              <h3>{person.name}</h3>\n            </div>\n          </TinderCard>\n          \n              )})}\n        </div>\n       \n                   \n    );\n}\n\nexport default TinderCards;"]},"metadata":{},"sourceType":"module"}